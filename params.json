{
  "name": "OkBuck",
  "tagline": "OkBuck is a gradle plugin, aiming to help developers utilize the super fast build system: BUCK, based on the existing project with Android Studio + gradle, and keep both build systems work, with few lines configuration.",
  "body": "# OkBuck\r\n[ ![Download](https://api.bintray.com/packages/okbuild/maven/OkBuild/images/download.svg) ](https://bintray.com/okbuild/maven/OkBuild/_latestVersion)\r\n[![Master branch build status](https://travis-ci.org/OkBuilds/OkBuck.svg?branch=master)](https://travis-ci.org/OkBuilds/OkBuck)\r\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-OkBuck-green.svg?style=flat)](https://android-arsenal.com/details/1/2593)\r\n\r\nOkBuck is a gradle plugin, aiming to help developers utilize the fast build \r\nsystem: [Buck](https://buckbuild.com/), based on an existing project built using gradle. This plugin lets you have both build systems work side by side.\r\n\r\n[Wiki](https://github.com/OkBuilds/OkBuck/wiki), \r\n[中文版](https://github.com/OkBuilds/OkBuck/blob/master/README-zh.md)\r\n\r\n## Why?\r\nGradle is typically the default build tool for android development, and \r\nto migrate to buck, there is a lot of overhead, which can be difficult and \r\nbuggy. OkBuck automates this migration with very few lines of configuration.\r\n\r\n## Installation\r\nIn root project `build.gradle` file:\r\n\r\n```gradle\r\nbuildscript {\r\n    repositories {\r\n        maven {\r\n            url  \"http://dl.bintray.com/okbuild/maven\"\r\n        }\r\n    }\r\n    dependencies {\r\n        classpath 'com.github.okbuilds:okbuild-gradle-plugin:0.1.1'\r\n    }\r\n}\r\n\r\napply plugin: 'com.github.okbuilds.okbuck-gradle-plugin'\r\n```\r\n\r\nThat's all for basic case, no need for any other configuration. After appling the plugin, two gradle tasks are added `okbuck` and `okbuckClean`\r\n  +  `okbuck` will generate BUCK files\r\n  +  `okbuckClean` will **delete all** files/dirs generated by OkBuck and BUCK\r\n\r\nYou can type `buck targets` to get a list of targets that can be build. The generated `.buckconfig.local` file will have some aiases setup to build your apps without having to type the rulename. i.e you can do things like `buck build appDebug another-appPaidRelease` etc. The plugin also generates an empty `.buckconfig` file if it does not exist. You can customize the settings in the `.buckconfig` file by using the various [options](https://buckbuild.com/concept/buckconfig.html)\r\n\r\n## Configuration\r\n```gradle\r\nokbuck {\r\n    buildToolVersion \"23.0.3\"\r\n    target \"android-23\"\r\n    linearAllocHardLimit = [\r\n            app: 7194304\r\n    ]\r\n    primaryDexPatterns = [\r\n            app: [\r\n                    '^com/github/okbuilds/okbuck/example/AppShell^',\r\n                    '^com/github/okbuilds/okbuck/example/BuildConfig^',\r\n                    '^android/support/multidex/',\r\n                    '^com/facebook/buck/android/support/exopackage/',\r\n                    '^com/github/promeg/xlog_android/lib/XLogConfig^',\r\n                    '^com/squareup/leakcanary/LeakCanary^',\r\n            ]\r\n    ]\r\n    exopackage = [\r\n            appDebug: true\r\n    ]\r\n    annotationProcessors = [\r\n            \"local-apt-dependency\": ['com.okuilds.apt.ExampleProcessor']\r\n    ]\r\n    appLibDependencies = [\r\n            'appProd': [\r\n                    'buck-android-support',\r\n                    'com.android.support:multidex',\r\n                    'libraries/javalibrary:main',\r\n                    'libraries/common:paidRelease',\r\n            ],\r\n            'appDev': [\r\n                    'buck-android-support',\r\n                    'com.android.support:multidex',\r\n                    'libraries/javalibrary:main',\r\n                    'libraries/common:freeDebug',\r\n            ],\r\n            'appDemo': [\r\n                    'buck-android-support',\r\n                    'com.android.support:multidex',\r\n                    'libraries/javalibrary:main',\r\n                    'libraries/common:paidRelease',\r\n            ]\r\n    ]\r\n    buckProjects = project.subprojects\r\n    keep = []\r\n}\r\n```\r\n\r\n+  `buildToolVersion` specifies the version of the Android SDK Build-tools, defaults to `23.0.3`\r\n+  `target` specifies the Android compile sdk version, default is `android-23`\r\n+  `linearAllocHardLimit` and `primaryDexPatterns` are maps, configuration used by buck for multidex. For more details about multidex configuration, please read the\r\n[Multidex wiki page](https://github.com/OkBuilds/OkBuck/wiki/Multidex-Configuration-Guide), \r\nif you don't need multidex, you can ignore these parameters\r\n+  `exopackage`, `appClassSource` and `appLibDependencies` are used for \r\nconfiguring buck's exopackage mode. For more details about exopackage configuration, \r\nplease read the [Exopackage wiki page](https://github.com/OkBuilds/OkBuck/wiki/Exopackage-Configuration-Guide), if you don't need exopackage, you can ignore these parameters\r\n+ `annotationProcessors` is used to depend on annotation processors declared locally as another gradle module in the same root project.\r\n+  `buckProjects` is a set of projects to generate buck configs for. Default is all sub projects of the root project.\r\n+ `keep` is a list of files to not clean up by the plugin when running `okbuckclean`. This may be useful to keep the `buck-out` folder around for faster incremental builds even when buck files are regenerated. Also useful if you want made manual modifications to some buck configuration and would like to keep it intact while regenerating the configuration for other projects.\r\n+ The keys used to configure various options can be either for \r\n - All buildTypes and flavors i.e `app`\r\n - All buildTypes of a particular flavor i.e 'appDemo'\r\n - All flavors of a particular buildType i.e 'appDebug'\r\n - A particular variant (buildType + flavor combination) i,e 'appDemoRelease'\r\n\r\n## Common Issues\r\n+ If you use ndk filters in your build.grade, you must set the `ANDROID_NDK` environment variable pointing to your local android ndk root dir, otherwise BUCK build will fail.\r\n+ If your project uses gradle 2.4, youneed force jdk version to 1.7, [ref1](http://stackoverflow.com/a/21212790/3077508) \r\nand [ref2](http://stackoverflow.com/a/18144853/3077508)\r\n+ OkBuck aims to provide almost all the features that the android gradle plugin provides,but your project may still be incompatible with buck for various reasons listed on the [Known caveats wiki page](https://github.com/OkBuilds/OkBuck/wiki/Known-caveats). \r\n\r\n## Compatibility\r\nOkBuck is tested under `gradle` 2.2.1 ~ 2.13, and `com.android.tools.build:gradle` 1.5.0 ~ 2.1.0.\r\nIf other versions have any compatibility problems, please file an issue.\r\n\r\n## [Full Change log](https://github.com/OkBuilds/OkBuck/blob/master/CHANGELOG.md)\r\n\r\n## Liscense\r\n```\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2015 Piasy\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```\r\n",
  "google": "UA-68342301-2",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}